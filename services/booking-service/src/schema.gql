# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Booking {
  id: ID!
  userId: ID!
  passengerId: ID!
  rideId: ID!
  status: BookingStatus!
  pickupLocation: String!
  dropoffLocation: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Status of a booking"""
enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  REJECTED
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  bookings: [Booking!]!
  booking(id: ID!): Booking!
  userBookings(userId: ID!): [Booking!]!
  rideBookings(rideId: ID!): [Booking!]!
  filterBookings(filters: BookingFilterInput!): [Booking!]!
}

input BookingFilterInput {
  userId: ID
  rideId: ID
  status: BookingStatus
}

type Mutation {
  createBooking(data: CreateBookingInput!): Booking!
  updateBooking(data: UpdateBookingInput!): Booking!
  cancelBooking(id: ID!, userId: ID!): Booking!
  acceptBooking(id: ID!, driverId: ID!): Booking!
  rejectBooking(id: ID!, driverId: ID!): Booking!
  deleteBooking(id: ID!): Booking!
}

input CreateBookingInput {
  userId: ID!
  passengerId: ID
  rideId: ID!
  pickupLocation: String!
  dropoffLocation: String!
  status: BookingStatus
}

input UpdateBookingInput {
  id: ID!
  status: BookingStatus
  pickupLocation: String
  dropoffLocation: String
}